version: 2.1

parameters:
  gh-pr:
    type: string
    default: ""
  test-url:
    type: string
    default: ""
  deployed-sha:
    type: string
    default: ""
  VERCEL_URL:
    type: string
    default: ""

# have a filter to disable regular builds.
workflows:
  version: 2
  build:
    jobs:
      - build

jobs:
  check:
    docker:
      - image:  cypress/base:18.12.0
    parallelism: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "smoketest/yarn.lock" }}
      - run:
          name: web client - yarn
          command: yarn
      - save_cache:
          key: cache-{{ .Branch }}-{{ checksum "smoketest/yarn.lock" }}
          paths:
            - ~/smoketest/.node_modules
            - ~/smoketest/.cache
#      - run:
#          name: web client - build
#          command: npm run build
  build:
    docker:
      - image: cypress/included:10.11.0
    steps:
      - checkout
      - run:
          name: Use parameters
          command: |
            echo parameters:
            echo gh-pr: "<< pipeline.parameters.gh-pr >>"
            echo test-url: << pipeline.parameters.test-url >>
            echo VERCEL_URL: <<pipeline.parameters.VERCEL_URL>>
            echo deployed-sha: <<pipeline.parameters.deployed-sha>>
      - run:
          name: build env and parameter diagnosis
          command: |
            env | grep CIRCLE | sort

            CIRCLE_PR_NUMBER=<< pipeline.parameters.gh-pr >>
            CYPRESS_baseUrl=<< pipeline.parameters.test-url >>
            EXPECTED_GIT_SHA=<< pipeline.parameters.deployed-sha >>
            VERCEL_URL=<< pipeline.parameters.VERCEL_URL >>

            env | grep CIRCLE | sort
            echo PR no : $CIRCLE_PR_NUMBER

            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo " there is this PR number: $CIRCLE_PR_NUMBER"
            fi

            if [ "X${CIRCLE_PR_NUMBER}${CYPRESS_baseUrl}${EXPECTED_GIT_SHA}" == "X" ]; then
              echo there are NO parameters. done.
              circleci-agent step halt
            fi
      - when:
          condition: << pipeline.parameters.deployed-sha >>
          steps:
            - run:
                command: |
                  cd smoketest
                  ## no yarn --immutable
      - run:
          name: NOT YET - verify fully deployed web site via git-commit (prep)
          command: |
            cd smoketest

            VERCEL_URL=<< pipeline.parameters.VERCEL_URL >>
            CIRCLE_PR_NUMBER=<< pipeline.parameters.gh-pr >>
            CYPRESS_baseUrl=<< pipeline.parameters.test-url >>
            EXPECTED_GIT_SHA=<< pipeline.parameters.deployed-sha >>

            echo VERCEL_URL = $VERCEL_URL

            echo
            echo SUT: $CYPRESS_baseUrl
            echo
            echo current CIRCLE_SHA1: $CIRCLE_SHA1
            echo expected EXPECTED_GIT_SHA: $EXPECTED_GIT_SHA
            echo
            echo using GIT_SHA1=${EXPECTED_GIT_SHA:-$CIRCLE_SHA1}
            echo running GIT_SHA1=${EXPECTED_GIT_SHA:-$CIRCLE_SHA1} npm run wait:valid-version
            echo
            echo this is currently skipped ...
            echo ... already part of next step!
            echo why: - it allows to skip instead of failing build
            # will be done in next step: # GIT_SHA1=${EXPECTED_GIT_SHA:-$CIRCLE_SHA1} npm run wait:valid-version
      - run:
          name: run cypress
          command: |
            export CIRCLE_PR_NUMBER=<< pipeline.parameters.gh-pr >>
            export CYPRESS_baseUrl=<< pipeline.parameters.test-url >>
            export EXPECTED_GIT_SHA=<< pipeline.parameters.deployed-sha >>
            export VERCEL_URL=<< pipeline.parameters.VERCEL_URL >>

            cd smoketest
            mkdir -p cypress/results

            CIRCLE_PR_NUMBER=<< pipeline.parameters.gh-pr >>
            CYPRESS_baseUrl=<< pipeline.parameters.test-url >>
            EXPECTED_GIT_SHA=<< pipeline.parameters.deployed-sha >>

            if [ "X${CIRCLE_PR_NUMBER}${CYPRESS_baseUrl}${EXPECTED_GIT_SHA}" == "X" ]; then
              echo there are NO parameters. done.
              exit 0
            fi

            GIT_SHA1=${EXPECTED_GIT_SHA:-$CIRCLE_SHA1} npm run wait:valid-version ; CHECK_VERSION=$?

            echo CHECK VERSION result: $CHECK_VERSION

            if [  "$CHECK_VERSION" -eq "255"  ] ;  then
              echo "Version does not match with $EXPECTED_GIT_SHA"
            else
              CYPRESS_branch=${CIRCLE_BRANCH} cypress run --record --key $CYPRESS_API_KEY --reporter junit --reporter-options mochaFile=cypress/results/test-results.xml,toConsole=true
            fi
      - store_test_results:
          path: smoketest/cypress/results
      - store_artifacts:
          path: /root/project/smoketest/cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: /root/project/smoketest/cypress/videos
          destination: videos
