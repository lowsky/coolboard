version: 2
jobs:
  check:
    docker:
      - image:  cypress/base:12.16.1
    parallelism: 1
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: web client - yarn
          command: yarn
      - save_cache:
          key: cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.npm
            - ~/.cache
#      - run:
#          name: web client - build
#          command: npm run build
  build:
    docker:
      - image: cypress/base:12.16.1
    parallelism: 1
    steps:
      - checkout
      - run:
          name: Set PR number in env
          command: |
            env | grep CIRCLE | sort
            echo $CIRCLE_PR_NUMBER   no.: $CIRCLE_PR_NUMBER
            echo CIRCLE_PULL_REQUEST no.: CIRCLE_PULL_REQUEST
            echo 'export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"' >> $BASH_ENV
      - run:
          name: build diagnosis
          command: |
            echo PR no.: $CIRCLE_PR_NUMBER

            source $BASH_ENV
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo " there is this PR number: $CIRCLE_PR_NUMBER"
            fi

            if [ "X${CIRCLE_PR_NUMBER}" == "X" ]; then
              echo no CIRCLE_PR_NUMBER set, so skipping this step
              exit -1
            fi

            echo "Value of CIRCLE_PULL_REQUEST: ${CIRCLE_PULL_REQUEST} "
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              echo transformed to ${CIRCLE_PULL_REQUEST##*/}
            fi

            env | grep CIRCLE | sort
      - restore_cache:
          keys:
            - cache-smoke-{{ checksum "smoketest/package.json" }}
      - run:
          name: Npm CI
          command: |
            cd smoketest
            npm ci
      - save_cache:
          key: cache-smoke-{{ checksum "smoketest/package.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: verify fully deployed web site via git-commit
          command: |
            echo PR: $CIRCLE_PR_NUMBER
            export CYPRESS_baseUrl=https://deploy-preview-${CIRCLE_PR_NUMBER}--coolboard.netlify.com
            cd smoketest
            echo DEPLOYED_SHA1 $DEPLOYED_SHA1
            echo CIRCLE_SHA1 $CIRCLE_SHA1
            echo using GIT_SHA1=${DEPLOYED_SHA1:-$CIRCLE_SHA1}
            GIT_SHA1=${DEPLOYED_SHA1:-$CIRCLE_SHA1} npm run wait:valid-version
      - run:
          name: cypress verify
          command: |
            echo PR: $CIRCLE_PR_NUMBER
            cd smoketest
            npx cypress verify ; npx cypress cache path
      - run:
          name: run cypress
          command: |
            echo PR: $CIRCLE_PR_NUMBER
            export CYPRESS_baseUrl=https://deploy-preview-${CIRCLE_PR_NUMBER}--coolboard.netlify.com
            cd smoketest
            mkdir -p cypress/results
            CYPRESS_branch=${CIRCLE_BRANCH} npx cypress run cypress run --record --key $CYPRESS_API_KEY --reporter junit --reporter-options mochaFile=cypress/results/test-results.xml,toConsole=true
      - store_test_results:
          path: smoketest/cypress/results
      - store_artifacts:
          path: /root/project/smoketest/cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: /root/project/smoketest/cypress/videos
          destination: videos

  prebuild_diag:
    docker:
      - image: cypress/base:12.16.1
    parallelism: 1
    steps:
      - checkout
      - run:
          name: Set PR number in env
          command: |
            env | grep CIRCLE | sort
            echo CIRCLE_PULL_REQUEST = $CIRCLE_PULL_REQUEST
            echo CIRCLE_PR_NUMBER = $CIRCLE_PR_NUMBER
            echo 'export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"' >> $BASH_ENV
      - run:
          name: build diagnosis
          command: |
            env | grep CIRCLE | sort

            echo PR no.: $CIRCLE_PR_NUMBER

            source $BASH_ENV
            echo PR env from BASH_ENV file: $BASH_ENV
            echo PR no.: $CIRCLE_PR_NUMBER

workflows:
  show-env:
    jobs:
      - prebuild_diag
  version: 2
