version: 2.1

parameters:
  test-url:
    type: string
    default: ""
  deployed-sha:
    type: string
    default: ""
  VERCEL_URL:
    type: string
    default: ""

# have a filter to disable regular builds.
workflows:
  all:
    jobs:
      - test
      - install_and_cache

jobs:
  install_and_cache:
    docker:
      - image:  cypress/base:20.9.0
    resource_class: lowsky/selfhosted
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-smoketest-nocypress-y5-{{ checksum "smoketest/yarn.lock" }}
      - run:
          name: smoketest - yarn install
          command: |
            cd smoketest
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn --immutable
      - save_cache:
          key: cache-smoketest-nocypress-y5-{{ checksum "smoketest/yarn.lock" }}
          paths:
            - smoketest/node_modules
  test:
    docker:
      - image: cypress/base:20.9.0
    resource_class: lowsky/selfhosted
    steps:
      - checkout
      - run:
          name: Use parameters
          command: |
            echo parameters:
            echo test-url: << pipeline.parameters.test-url >>
            echo VERCEL_URL=<<pipeline.parameters.VERCEL_URL>>
            echo deployed-sha: <<pipeline.parameters.deployed-sha>>
      - run:
          name: build env and parameter diagnosis
          command: |
            env | grep CIRCLE | sort

            CYPRESS_baseUrl=<< pipeline.parameters.test-url >>
            EXPECTED_GIT_SHA=<< pipeline.parameters.deployed-sha >>
            VERCEL_URL=<< pipeline.parameters.VERCEL_URL >>

      - run:
          name: check matching of versions
          command: |
            cd smoketest

            export VERCEL_URL=<< pipeline.parameters.VERCEL_URL >>
            export CYPRESS_baseUrl=<< pipeline.parameters.test-url >>
            export EXPECTED_GIT_SHA=<< pipeline.parameters.deployed-sha >>

            echo VERCEL_URL=$VERCEL_URL
            echo
            echo SUT:
            echo export CYPRESS_baseUrl=$CYPRESS_baseUrl
            echo
            echo circle.ci -
            echo   CIRCLE_SHA1=$CIRCLE_SHA1
            echo
            echo expecting
            echo export EXPECTED_GIT_SHA=$EXPECTED_GIT_SHA
            echo export GIT_SHA1=${EXPECTED_GIT_SHA:-$CIRCLE_SHA1}
            echo
            echo running
            echo    check-deployed-version/check-deployed-version

            export GIT_SHA1=${EXPECTED_GIT_SHA:-$CIRCLE_SHA1}

            check-deployed-version/check-deployed-version || CHECK_VERSION=$?

            echo DEBUG check - result: $CHECK_VERSION

            if [  "$CHECK_VERSION" -eq "255"  ] ;  then
              echo "Version does not match with $EXPECTED_GIT_SHA"
              exit -1
            fi

      - restore_cache:
          keys:
            - cache-smoketest-nocypress-y5-{{ checksum "smoketest/yarn.lock" }}
      - run:
          name: smoketest - yarn install
          command: |
            cd smoketest
            yarn install --immutable --check-cache
            yarn cypress cache path
            yarn cypress install
            yarn cypress verify
      - save_cache:
          key: cache-smoketest-nocypress-y5-{{ checksum "smoketest/yarn.lock" }}
          paths:
            - smoketest/node_modules

      - run:
          name: run cypress
          command: |
            export CYPRESS_baseUrl=<< pipeline.parameters.test-url >>
            export EXPECTED_GIT_SHA=<< pipeline.parameters.deployed-sha >>
            export VERCEL_URL=<< pipeline.parameters.VERCEL_URL >>
            export CYPRESS_branch=${CIRCLE_BRANCH}

            cd smoketest
            mkdir -p cypress/results
            npx cypress info

            echo running CYPRESS_branch=${CIRCLE_BRANCH} npm run cy run -- --record
            # CYPRESS_branch=${CIRCLE_BRANCH} npm run cy run -- --record --key $CYPRESS_API_KEY --reporter junit --reporter-options mochaFile=cypress/results/test-results.xml,toConsole=true
            # without reporting to cypress.io
            CYPRESS_branch=${CIRCLE_BRANCH} npm run cy run -- --reporter junit --reporter-options mochaFile=cypress/results/test-results.xml,toConsole=true
      - store_test_results:
          path: smoketest/cypress/results
      - store_artifacts:
          path: /root/project/smoketest/cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: /root/project/smoketest/cypress/videos
          destination: videos
