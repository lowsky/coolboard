type Board {
  createdAt: DateTime!
  createdBy: User!
  id: ID!
  lists: [List!]!
  name: String!
  updatedAt: DateTime!
}

input BoardUpdateInput {
  lists: ListUpdateManyInput!
}

input BoardWhereUniqueInput {
  id: ID
}

type Card {
  createdAt: DateTime!
  createdBy: User!
  description: String
  id: ID!
  name: String!
  updatedAt: DateTime!
  updatedBy: User!
}

input CardCreateInput {
  description: String
  name: String!
}

input CardUpdateInput {
  description: String
  name: String
}

input CardUpdateManyInput {
  connect: [CardWhereUniqueInput!]
  create: [CardCreateInput!]
  disconnect: [CardWhereUniqueInput!]
}

input CardWhereUniqueInput {
  id: ID!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type List {
  cards: [Card!]!
  createdAt: DateTime!
  createdBy: User!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

input ListCreateInput {
  name: String!
}

input ListScalarWhereInput {
  id_in: [ID!]!
}

input ListUpdateInput {
  cards: CardUpdateManyInput
}

input ListUpdateManyInput {
  create: [ListCreateInput!]
  delete: [ListWhereUniqueInput!]
  deleteMany: [ListScalarWhereInput!]
}

input ListWhereUniqueInput {
  id: ID!
}

type Mutation {
  createBoard(name: String!): User!
  deleteBoard(id: ID!): Board!
  deleteList(id: ID!): List!
  updateBoard(data: BoardUpdateInput!, where: BoardWhereUniqueInput!): Board!
  updateCard(data: CardUpdateInput!, where: CardWhereUniqueInput!): Card!
  updateList(data: ListUpdateInput!, where: ListWhereUniqueInput!): List!
}

type Query {
  board(where: BoardWhereUniqueInput!): Board
  list(where: QueryListInput!): List

  """
  authenticated current user
  """
  me: User
}

input QueryListInput {
  id: ID
}

type User {
  avatarUrl: String
  boards: [Board!]!
  email: String!
  id: ID!
  name: String!
}
