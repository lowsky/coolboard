generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Card {
  id          String  @id @default(cuid())
  name        String
  description String?

  createdAt   DateTime @default(now())
  createdBy   User     @relation("createdBy", fields: [createdById], references: [id])
  createdById String
  updatedAt   DateTime @updatedAt
  updatedBy   User     @relation("updatedBy", fields: [updatedById], references: [id])
  updatedById String
  listId      String
  list        List     @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@index([createdById])
  @@index([listId])
  @@index([updatedById])
}

model List {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId   String
  cards     Card[]

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  @@index([boardId])
  @@index([createdById])
}

model Board {
  id          String   @id @default(cuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  lists       List[]

  @@index([createdById])
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String
  avatarUrl     String?
  auth0id       String?  @unique
  identity      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  boards        Board[]
  CardCreatedBy Card[]   @relation("createdBy")
  CardUpdatedBy Card[]   @relation("updatedBy")
  lists         List[]
}
